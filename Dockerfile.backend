# Use Node.js 20 LTS Alpine for smaller image size
FROM node:20-alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Copy root package.json for engine requirements
COPY package*.json ./

# Copy backend package.json and install dependencies
COPY backend/package*.json ./backend/
WORKDIR /app/backend
RUN npm ci --only=production
WORKDIR /app

# Copy backend source code
COPY backend/ ./backend/

# Create uploads directory
RUN mkdir -p ./backend/uploads

# Create a simple index.html for the root route
RUN mkdir -p ./backend/public && echo '<!DOCTYPE html>
<html>
<head>
    <title>MetroUni API Server</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
        .container { max-width: 800px; margin: 0 auto; text-align: center; }
        .api-link { display: inline-block; margin: 10px; padding: 15px 30px; background: rgba(255,255,255,0.2); 
                   border-radius: 8px; text-decoration: none; color: white; border: 1px solid rgba(255,255,255,0.3); }
        .api-link:hover { background: rgba(255,255,255,0.3); }
        h1 { font-size: 3em; margin-bottom: 20px; }
        .status { background: #4CAF50; padding: 10px; border-radius: 5px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéì MetroUni Platform</h1>
        <div class="status">‚úÖ API Server Running Successfully</div>
        <p>Your MetroUni social learning platform backend is live and ready!</p>
        <div>
            <a href="/api/health" class="api-link">üîç Health Check</a>
            <a href="/api/auth" class="api-link">üîê Authentication</a>
            <a href="/api/users" class="api-link">üë• Users API</a>
            <a href="/api/posts" class="api-link">üìù Posts API</a>
        </div>
        <p style="margin-top: 40px; opacity: 0.8;">
            Frontend coming soon! API is fully functional for mobile apps and external integrations.
        </p>
    </div>
</body>
</html>' > ./backend/public/index.html

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3001
ENV JWT_EXPIRES_IN=7d
ENV UPLOAD_MAX_SIZE=10485760
ENV RATE_LIMIT_WINDOW_MS=900000
ENV RATE_LIMIT_MAX_REQUESTS=100

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

# Set working directory to backend for startup
WORKDIR /app/backend

# Start the backend server
CMD ["node", "server.js"]